<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">




<mapper namespace="com.itheima.dao.UserDao">
     
    <resultMap id="userMap" type="usEr">


        <id property="id" column="id"></id>

        <result property="username" column="username"></result>
        <result property="address" column="address"></result>
        <result property="sex" column="sex" ></result>
        <result property="birthday" column="birthday"></result>

    </resultMap>

    <sql id="default">

        select * from user
    </sql>

    
    <select id="findAll" resultMap="userMap">

       <!-- select id as userId ,username as userName ,address as userAddress , sex as userSex ,
        birthday as userBirthday from user;-->
        select * from user;

    </select>

    <insert id="saveUser" parameterType="com.itheima.domain.User">

        <selectKey keyProperty="userId"  resultType="int" order="AFTER">
            select last_insert_id();
        </selectKey>
        insert into user(username,address,sex,birthday) values(#{userName},#{userAddress},#{userSex},#{userBirthday});

    </insert>

    <update id="updateUser" parameterType="com.itheima.domain.User">

        update user set username=#{username},address=#{address},sex=#{sex},birthday=#{birthday} where id=#{id};


    </update>

    <delete id="delectUser" parameterType="java.lang.Integer">

        delete from user where id=#{id}


    </delete>

    <select id="findById" parameterType="java.lang.Integer" resultType="com.itheima.domain.User">

        select * from user where id=#{id};

    </select>

    <select id="findByName" parameterType="string" resultType="com.itheima.domain.User">

       select * from user where username like #{name}
      <!--   select * from user where username like '%${value}%';-->

    </select>

    <select id="findUserByVo" parameterType="com.itheima.domain.QueryVo" resultType="com.itheima.domain.User">

        select * from user where username like #{user.username};

    </select>

    <select id="findUserByCondition" resultMap="userMap" >

        select * from user
        <where>
        <if test="userName !=null">

            and username = #{userName}

        </if>
        <if test="userSex != null">

            and sex =#{userSex}

        </if>
        </where>


    </select>

    <!--select id ,username as name from user-->
    <select id="findUserByIds"  resultMap="userMap">

        <include refid="default" />
        <where>
        <if test="ids !=null and ids.size()>0">
        <foreach collection="ids" open=" and id in (" close=")" item="uid" separator=",">

            #{uid}

        </foreach>
        </if>
        </where>
    </select>
    <select id="findUserByName"  resultMap="userMap">

        <include refid="default" />
        <where>
            <if test="username !=null and username!=''">
                and username like #{username}
            </if>
        </where>
    </select>





</mapper>
